/*
PM ARSHIYA ZEBA
USN-1NH19CS732*/

#include <stdio.h>
#include <stdlib.h>
#define MAX_SIZE 10
int n=0;
void insert(int a[], int item)
{
    int curr, par, temp;
    if(n==MAX_SIZE)
    {
        printf("Heap is full");
        exit(0);
    }
    curr=n;
    a[curr]=item;
    par=(curr-1)/2;
    while(curr!=0 && a[curr]>a[par])
    {
        temp=a[curr];
        a[curr]=a[par];
        a[par]=temp;
        curr=par;
        par=(curr-1)/2;
    }
    n++;
}

void heapify(int a[], int i)
{
    int temp;
    int largest = i;
    int l = 2*i+1;
    int r = 2*i+2;
    
    if(l<n && a[l]>a[largest])
        largest = l;
    if(r<n && a[r]>a[largest])
        largest = r;
    if(largest != i)
    {
        temp=a[i];
        a[i]=a[largest];
        a[largest]=temp;
        heapify(a, largest);
    }
}

void delete(int a[])
{
    int par, curr;
    if(n==0)
    {
        printf("Heap is empty");
        exit(0);
    }
    printf("Item deletes = %d", a[0]);
    a[0] = a[n-1];
    heapify(a,0);
    n--;
}

void printArray(int a[])
{
    for(int i=0;i<n;i++)
    {
        printf("%d ", a[i]);
    }
    printf("\n");
}

void main()
{
    int choice, item;
    do{
        printf("\n1.Insert\n2.Delete\n3.heapify\n4.display\n5.Exit");
        printf("\nEnter the choice: ");
        scanf("%d", &choice);
        switch(choice)
        {
            case 1:
                printf("Enter the element to be inserted\n");
                scanf("%d", &item);
                root=insert(root,item);
                break;
                
                
            case 2:    
                printf("Enter the element to be deleted\n");
                scanf("%d", &item);
                root=delete(root,item);
                break;
                
            case 3:
                if(root == NULL)
                    printf("Tree is empty\n");
                else
                {
                    printf("Inorder Traversal:");
                    inorder(root);
                }
                break;
                
            case 5:
                printf("\nEXIT");
                break;
                
            default:
                printf("Enter a valid choice(1-5)");
        }
    }while(choice != 5);
}
}
